(self.webpackChunkgithub_search_app=self.webpackChunkgithub_search_app||[]).push([[206],{"./src/pages/HomePage.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Empty:()=>Empty,Error:()=>Error,Loading:()=>Loading,__namedExportsOrder:()=>__namedExportsOrder,default:()=>HomePage_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_redux=__webpack_require__("./node_modules/react-redux/dist/react-redux.mjs"),store=__webpack_require__("./src/lib/store.ts"),SearchBar=__webpack_require__("./src/components/SearchBar/SearchBar.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const UserList=(0,react.lazy)((()=>__webpack_require__.e(498).then(__webpack_require__.bind(__webpack_require__,"./src/components/Lists/UserList/UserList.tsx")))),HomePage=()=>{const dispatch=(0,react_redux.wA)(),{users,status,error}=(0,react_redux.d4)((state=>state.users)),[searchTerm,setSearchTerm]=(0,react.useState)("");(0,react.useEffect)((()=>{dispatch((0,store.K_)())}),[dispatch]);const filteredUsers=users.filter((user=>user.login.toLowerCase().includes(searchTerm.toLowerCase())));return"loading"===status?(0,jsx_runtime.jsx)("div",{"data-testid":"loading",children:"Loading users..."},"loading"):"failed"===status?(0,jsx_runtime.jsxs)("div",{children:["Error: ",error]}):(0,jsx_runtime.jsxs)("div",{className:"relative container w-4/5 flex flex-col flex-grow items-center justify-start gap-8 md:gap-16 py-12",children:[(0,jsx_runtime.jsx)("div",{className:"w-full md:w-1/2",children:(0,jsx_runtime.jsx)(SearchBar.A,{placeholder:"Search GitHub user...",onSearch:term=>{setSearchTerm(term)}})}),(0,jsx_runtime.jsx)(react.Suspense,{fallback:(0,jsx_runtime.jsx)("div",{children:"Loading user list..."}),children:filteredUsers.length>0?(0,jsx_runtime.jsx)(UserList,{users:filteredUsers}):(0,jsx_runtime.jsx)("div",{className:"text-gray-500",children:"No users found."})})]})},pages_HomePage=HomePage;HomePage.__docgenInfo={description:"",methods:[],displayName:"HomePage"};var redux_toolkit_modern=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs"),dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),jest_dist=__webpack_require__("./node_modules/@storybook/jest/dist/index.mjs");const mockState={status:"succeeded",users:[{login:"octocat",avatar_url:"https://avatars.githubusercontent.com/u/583231?v=4",html_url:"https://github.com/octocat",id:0,repos_url:""},{login:"torvalds",avatar_url:"https://avatars.githubusercontent.com/u/1024025?v=4",html_url:"https://github.com/torvalds",id:0,repos_url:""},{login:"pjhyett",avatar_url:"https://avatars.githubusercontent.com/u/3?v=4",html_url:"https://github.com/pjhyett",id:3,repos_url:"https://api.github.com/users/pjhyett/repos"},{login:"wayneeseguin",avatar_url:"https://avatars.githubusercontent.com/u/4?v=4",html_url:"https://github.com/wayneeseguin",id:4,repos_url:"https://api.github.com/users/wayneeseguin/repos"},{login:"brynary",avatar_url:"https://avatars.githubusercontent.com/u/5?v=4",html_url:"https://github.com/brynary",id:5,repos_url:"https://api.github.com/users/brynary/repos"},{login:"tenderlove",avatar_url:"https://avatars.githubusercontent.com/u/6?v=4",html_url:"https://github.com/tenderlove",id:6,repos_url:"https://api.github.com/users/tenderlove/repos"},{login:"steveklabnik",avatar_url:"https://avatars.githubusercontent.com/u/7?v=4",html_url:"https://github.com/steveklabnik",id:7,repos_url:"https://api.github.com/users/steveklabnik/repos"},{login:"excid3",avatar_url:"https://avatars.githubusercontent.com/u/8?v=4",html_url:"https://github.com/excid3",id:8,repos_url:"https://api.github.com/users/excid3/repos"},{login:"kensmith",avatar_url:"https://avatars.githubusercontent.com/u/9?v=4",html_url:"https://github.com/kensmith",id:9,repos_url:"https://api.github.com/users/kensmith/repos"},{login:"johndoe",avatar_url:"https://avatars.githubusercontent.com/u/10?v=4",html_url:"https://github.com/johndoe",id:10,repos_url:"https://api.github.com/users/johndoe/repos"}],error:null},MockStore=_ref=>{let{usersState,children}=_ref;return(0,jsx_runtime.jsx)(react_redux.Kq,{store:(0,redux_toolkit_modern.U1)({reducer:{users:(0,redux_toolkit_modern.Z0)({name:"users",initialState:usersState,reducers:{}}).reducer}}),children})},HomePage_stories={component:pages_HomePage,title:"Pages/HomePage",decorators:[story=>(0,jsx_runtime.jsx)("div",{style:{padding:"3rem"},children:story()})],tags:["autodocs"]},Default={decorators:[story=>(0,jsx_runtime.jsx)(MockStore,{usersState:mockState,children:story()})],play:async _ref2=>{let{canvasElement}=_ref2;const canvas=(0,dist.ux)(canvasElement);await(0,dist.fm)((async()=>{dist.rC.change(canvas.getByPlaceholderText("Search GitHub user..."),{target:{value:"octocat"}}),dist.rC.keyDown(canvas.getByPlaceholderText("Search GitHub user..."),{key:"Enter",code:"Enter"}),await(0,jest_dist.E)(canvas.getByText("octocat")).toBeInTheDocument(),await(0,jest_dist.E)(canvas.queryByText("torvalds")).not.toBeInTheDocument()}))}},Loading={decorators:[story=>(0,jsx_runtime.jsx)(MockStore,{usersState:{...mockState,status:"loading",users:[],error:null},children:story()})],play:async _ref3=>{let{canvasElement}=_ref3;const canvas=(0,dist.ux)(canvasElement);await(0,jest_dist.E)(canvas.getByTestId("loading")).toBeInTheDocument(),await(0,jest_dist.E)(canvas.getByText("Loading users...")).toBeInTheDocument()}},Error={decorators:[story=>(0,jsx_runtime.jsx)(MockStore,{usersState:{status:"failed",users:[],error:"Failed to fetch users"},children:story()})],play:async _ref4=>{let{canvasElement}=_ref4;const canvas=(0,dist.ux)(canvasElement);await(0,dist.fm)((async()=>{await(0,jest_dist.E)(canvas.getByText("Error: Failed to fetch users")).toBeInTheDocument()}))}},Empty={decorators:[story=>(0,jsx_runtime.jsx)(MockStore,{usersState:{status:"succeeded",users:[],error:null},children:story()})],play:async _ref5=>{let{canvasElement}=_ref5;const canvas=(0,dist.ux)(canvasElement);await(0,dist.fm)((async()=>{await(0,jest_dist.E)(canvas.getByText("No users found.")).toBeInTheDocument()})),dist.rC.change(canvas.getByPlaceholderText("Search GitHub user..."),{target:{value:"react"}}),await(0,dist.fm)((async()=>{await(0,jest_dist.E)(canvas.getByText("No users found.")).toBeInTheDocument()}))}},__namedExportsOrder=["Default","Loading","Error","Empty"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  decorators: [(story: any) => <MockStore usersState={mockState}>\r\n        {story()}\r\n      </MockStore>],\n  play: async ({\n    canvasElement\n  }: {\n    canvasElement: HTMLElement;\n  }) => {\n    const canvas = within(canvasElement);\n    //await waitForElementToBeRemoved(() => canvas.getByText('Loading users...'));\n    await waitFor(async () => {\n      fireEvent.change(canvas.getByPlaceholderText('Search GitHub user...'), {\n        target: {\n          value: 'octocat'\n        }\n      });\n      fireEvent.keyDown(canvas.getByPlaceholderText('Search GitHub user...'), {\n        key: 'Enter',\n        code: 'Enter'\n      });\n      await expect(canvas.getByText('octocat')).toBeInTheDocument();\n      await expect(canvas.queryByText('torvalds')).not.toBeInTheDocument();\n    });\n  }\n}",...Default.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:"{\n  decorators: [(story: any) => <MockStore usersState={{\n    ...mockState,\n    status: 'loading',\n    users: [],\n    error: null\n  }}>\r\n        {story()}\r\n      </MockStore>],\n  play: async ({\n    canvasElement\n  }: {\n    canvasElement: HTMLElement;\n  }) => {\n    const canvas = within(canvasElement);\n    await expect(canvas.getByTestId('loading')).toBeInTheDocument();\n    await expect(canvas.getByText('Loading users...')).toBeInTheDocument();\n  }\n}",...Loading.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  decorators: [(story: any) => <MockStore usersState={{\n    status: 'failed',\n    users: [],\n    error: 'Failed to fetch users'\n  }}>\r\n        {story()}\r\n      </MockStore>],\n  play: async ({\n    canvasElement\n  }: {\n    canvasElement: HTMLElement;\n  }) => {\n    const canvas = within(canvasElement);\n    //await waitForElementToBeRemoved(() => canvas.getByText('Loading users...'));\n    await waitFor(async () => {\n      await expect(canvas.getByText('Error: Failed to fetch users')).toBeInTheDocument();\n    });\n  }\n}",...Error.parameters?.docs?.source}}},Empty.parameters={...Empty.parameters,docs:{...Empty.parameters?.docs,source:{originalSource:"{\n  decorators: [(story: any) => <MockStore usersState={{\n    status: 'succeeded',\n    users: [],\n    error: null\n  }}>\r\n        {story()}\r\n      </MockStore>],\n  play: async ({\n    canvasElement\n  }: {\n    canvasElement: HTMLElement;\n  }) => {\n    const canvas = within(canvasElement);\n    await waitFor(async () => {\n      await expect(canvas.getByText('No users found.')).toBeInTheDocument();\n    });\n    fireEvent.change(canvas.getByPlaceholderText('Search GitHub user...'), {\n      target: {\n        value: 'react'\n      }\n    });\n    await waitFor(async () => {\n      await expect(canvas.getByText('No users found.')).toBeInTheDocument();\n    });\n  }\n}",...Empty.parameters?.docs?.source}}}},"./src/components/SearchBar/SearchBar.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const SearchBar=_ref=>{let{placeholder="Search...",onSearch}=_ref;const[searchTerm,setSearchTerm]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:"flex items-center space-x-2 w-full",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("input",{type:"text",value:searchTerm,onChange:e=>{const value=e.target.value;setSearchTerm(value),onSearch(value)},placeholder,className:"min-w-4 w-full p-2 bg-textColor-50 border border-textColor-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary shadow-sm"})})},__WEBPACK_DEFAULT_EXPORT__=SearchBar;SearchBar.__docgenInfo={description:"",methods:[],displayName:"SearchBar",props:{placeholder:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"Search..."',computed:!1}},onSearch:{required:!0,tsType:{name:"signature",type:"function",raw:"(searchTerm: string) => void",signature:{arguments:[{type:{name:"string"},name:"searchTerm"}],return:{name:"void"}}},description:""}}}},"./src/lib/store.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{K_:()=>fetchGithubUsers,Tt:()=>setFilterType,fM:()=>setFilterLanguage,y:()=>fetchGithubRepositories});var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs");const fetchGithubUsers=(0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.zD)("users/fetchGithubUsers",(async()=>{const response=await fetch("https://api.github.com/users");if(!response.ok)throw new Error("Failed to fetch users");return response.json()})),usersSlice=(0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.Z0)({name:"users",initialState:{users:[],status:"idle",error:null},reducers:{},extraReducers:builder=>{builder.addCase(fetchGithubUsers.pending,(state=>{state.status="loading",state.error=null})).addCase(fetchGithubUsers.fulfilled,((state,action)=>{state.status="succeeded",state.users=action.payload})).addCase(fetchGithubUsers.rejected,((state,action)=>{state.status="failed",state.error=action.error.message||"Something went wrong"}))}}),fetchGithubRepositories=(0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.zD)("repositories/fetchGithubRepositories",(async username=>{const response=await fetch(`https://api.github.com/users/${username}/repos`);if(!response.ok)throw new Error("Failed to fetch repositories");return response.json()})),repositoriesSlice=(0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.Z0)({name:"repositories",initialState:{repos:[],status:"idle",error:null,filterType:"all",filterLanguage:"all"},reducers:{setFilterType(state,action){state.filterType=action.payload},setFilterLanguage(state,action){state.filterLanguage=action.payload}},extraReducers:builder=>{builder.addCase(fetchGithubRepositories.pending,(state=>{state.status="loading",state.error=null})).addCase(fetchGithubRepositories.fulfilled,((state,action)=>{state.status="succeeded",state.repos=action.payload})).addCase(fetchGithubRepositories.rejected,((state,action)=>{state.status="failed",state.error=action.error.message||"Something went wrong"}))}}),{setFilterType,setFilterLanguage}=repositoriesSlice.actions;(0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.U1)({reducer:{users:usersSlice.reducer,repositories:repositoriesSlice.reducer}})},"?4f7e":()=>{}}]);